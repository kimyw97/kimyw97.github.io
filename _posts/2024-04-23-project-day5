---
layout: post
title: "2025.04.23 - Raspberry Pi ROS2 자동 설치 및 워크스페이스 빌드 스크립트"
date: 2025-04-23 10:00:00 +0900
categories: ros2 raspberrypi automation
---

## 📌 목적

Raspberry Pi에서 ROS 2 Humble 환경을 자동으로 설치하고, GitHub 저장소에서 프로젝트를 클론하여 `ros2_ws`를 빌드하는 자동화 스크립트를 작성했다. 초기 환경 셋업이 복잡하고 번거롭기 때문에 한 줄로 모든 설정을 마칠 수 있도록 구성했다.

---

## 🧾 작업 내용 요약

### ✅ 주요 기능

- ROS 2 Humble 자동 설치 (이미 설치되어 있으면 생략)
- 필수 개발 도구 설치 (`colcon`, `rosdep`, `vcstool` 등)
- `rosdep` 초기화 및 의존성 설치
- GitHub 저장소 클론 및 `ros2_ws` 복사
- colcon 빌드
- `.bashrc` 자동 등록
- 인터넷 연결 확인 및 로케일 설정 포함
- 빌드 성공 플래그 파일 생성

---

## 💻 전체 스크립트

```bash
#!/bin/bash

REPO_URL="https://github.com/yourusername/yourrepo.git"
CLONE_DIR="$HOME/temp_cow_repo"
TARGET_WS="$HOME/ros2_ws"

# 시스템 업데이트
sudo apt update && sudo apt upgrade -y

# ROS 2 Humble 설치
if ! dpkg -s ros-humble-desktop > /dev/null 2>&1; then
  sudo apt install -y locales
  sudo locale-gen en_US en_US.UTF-8
  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
  export LANG=en_US.UTF-8

  sudo apt install -y software-properties-common
  sudo add-apt-repository universe
  sudo apt update
  sudo apt install -y curl
  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg > /dev/null
  echo "deb [signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
  sudo apt update
  sudo apt install -y ros-humble-desktop
fi

# 개발 도구 설치
sudo apt install -y \
  python3-colcon-common-extensions \
  python3-rosdep \
  python3-vcstool \
  python3-argcomplete \
  python3-pip \
  build-essential \
  cmake \
  git

# rosdep 초기화
if [ ! -f "/etc/ros/rosdep/sources.list.d/20-default.list" ]; then
  sudo rosdep init
fi

rosdep_retry=0
until rosdep update || [ $rosdep_retry -eq 3 ]; do
  echo "⚠️ rosdep update failed, retrying..."
  sleep 2
  rosdep_retry=$((rosdep_retry + 1))
done

# Git 저장소 클론
mkdir -p "$CLONE_DIR"
git clone "$REPO_URL" "$CLONE_DIR" --depth 1

# ros2_ws 복사
mkdir -p "$TARGET_WS"
cp -r "$CLONE_DIR/cow/raspberrypi/ros2_ws/"* "$TARGET_WS"

# 의존성 설치
cd "$TARGET_WS"
source /opt/ros/humble/setup.bash
rosdep install --from-paths src --ignore-src -r -y

# 빌드
colcon build --symlink-install --cmake-clean-cache

# 빌드 성공 플래그
if [ $? -eq 0 ]; then
  touch "$TARGET_WS/.ros2_build_success"
  echo "✅ Build success"
else
  echo "❌ Build failed"
  exit 1
fi

# .bashrc 자동 등록
if ! grep -Fxq "source ~/ros2_ws/install/setup.bash" ~/.bashrc; then
  echo "source ~/ros2_ws/install/setup.bash" >> ~/.bashrc
fi
```

---

## 📦 추가 팁

- Raspberry Pi 성능이 낮은 경우 `swap` 설정 또는 `colcon build -j2` 제한을 추천
- 의존성 문제 발생 시 `rosdep update` 재시도 가능
- `.ros2_build_success` 파일로 자동화된 스크립트에서 성공 여부 판단 가능

---

## 📝 참고

- ROS 2 Humble 설치 문서: [https://docs.ros.org/en/humble/Installation.html](https://docs.ros.org/en/humble/Installation.html)
- colcon: ROS 2 빌드 도구 ([공식 문서](https://colcon.readthedocs.io))

---
